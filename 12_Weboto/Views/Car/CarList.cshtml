@model List<_12_Weboto.Models.Car>

<div class="container mt-4">
    <!-- Thanh tìm kiếm -->
    <div class="mb-3 position-relative">
        <div class="input-group shadow-sm">
            <span class="input-group-text bg-white border-end-0">
                <i class="fas fa-search"></i>
            </span>
            <input type="text" id="searchInput" class="form-control border-start-0"
                   placeholder="Tìm kiếm theo Tên xe, Hãng xe hoặc Từ Khóa"
                   onkeyup="filterCars()" onfocus="showSearchHistory()" onfocusout="hideSearchHistory()">

        </div>

        <!-- Dropdown lịch sử tìm kiếm và tìm kiếm hàng đầu -->
        <div id="searchDropdown" class="search-dropdown shadow-sm">
            <!-- Lịch sử tìm kiếm -->
            <div class="search-section">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <h6 class="fw-bold text-dark mb-0">Lịch sử tìm kiếm</h6>
                    <button id="clearHistory" class="btn btn-link text-danger p-0" style="font-size: 14px;" onclick="clearSearchHistory()">
                        <i class="fas fa-trash-alt me-1"></i>Xóa lịch sử
                    </button>
                </div>
                <ul id="searchHistory" class="list-unstyled mb-0"></ul>
            </div>

            <!-- Tìm kiếm hàng đầu -->
            <div class="search-section mt-3">
                <h6 class="fw-bold text-dark mb-2">Tìm kiếm hàng đầu</h6>
                <div id="topSearches" class="d-flex flex-wrap gap-2">
                    <!-- Các từ khóa tìm kiếm hàng đầu sẽ được thêm bằng JavaScript -->
                </div>
            </div>
        </div>
    </div>

    @if (Model == null || !Model.Any())
    {
        <p class="text-center text-danger">🚗 Không có xe nào để hiển thị.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="carList">
            @foreach (var car in Model)
            {
                <div class="col car-item"
                     data-name="@car.TenXe.ToLower()"
                     data-brand="@car.Brand?.TenHang?.ToLower()">
                    <div class="card shadow-sm h-100" onclick="window.location.href='@Url.Action("Details", "Car", new { id = car.Id })'" style="cursor: pointer;">
                        <!-- Hình Ảnh -->
                        <div class="card-img-top">
                            <img src="@Url.Content(car.Images?.FirstOrDefault()?.ImageUrl ?? "~/uploads/default-car.jpg")"
                                 class="d-block w-100"
                                 alt="@car.TenXe">
                        </div>

                        <div class="card-body d-flex flex-column">
                            <!-- Tên Xe -->
                            <h5 class="card-title text-center fw-bold text-uppercase">@car.TenXe</h5>

                            <!-- Thông Tin Chi Tiết -->
                            <div class="row text-muted">
                                <div class="col-6">
                                    <p class="mb-1"><i class="fas fa-building"></i> @car.Brand?.TenHang</p>
                                    <p class="mb-1"><i class="fas fa-calendar-alt"></i> @car.NamSanXuat</p>
                                    <p class="mb-1"><i class="fas fa-gas-pump"></i> @car.NhienLieu</p>
                                </div>
                                <div class="col-6 text-end">
                                    <p class="mb-1"><i class="fas fa-road"></i> @car.SoKM Km</p>
                                    <p class="mb-1"><i class="fas fa-cogs"></i> @car.HopSo</p>
                                </div>
                            </div>

                            <!-- Giá Tiền -->
                            <div class="mt-auto text-end">
                                <h4 class="fw-bold text-danger">@String.Format("{0:N0} VND", car.GiaTien)</h4>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <button onclick="scrollToTop()" id="scrollToTopBtn" title="Lên đầu trang">
        <i class="fas fa-arrow-up"></i>
    </button>
</div>

<style>
    .input-group {
        border-radius: 50px;
        overflow: hidden;
    }

    .form-control {
        border: 1px solid #ced4da;
        padding: 10px 15px;
    }

        .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            border-color: #80bdff;
        }

    .input-group-text {
        border: 1px solid #ced4da;
        background-color: #fff;
    }

    .search-dropdown {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        z-index: 1000;
        max-height: 300px;
        overflow-y: auto;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .search-section {
        border-bottom: 1px solid #e0e0e0;
        padding-bottom: 10px;
    }

        .search-section:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }

    .search-history-item {
        padding: 8px 12px;
        border-radius: 20px;
        background-color: #f8f9fa;
        margin-bottom: 5px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .search-history-item:hover {
            background-color: #e9ecef;
        }

    .top-search-item {
        display: inline-block;
        padding: 8px 15px;
        border-radius: 20px;
        background-color: #e9ecef;
        color: #495057;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .top-search-item:hover {
            background-color: #d6d8db;
        }

    #scrollToTopBtn {
        display: none;
        position: fixed;
        bottom: 120px;
        right: 20px;
        z-index: 1000;
        font-size: 18px;
        border: none;
        outline: none;
        background-color: #007bff;
        color: white;
        cursor: pointer;
        padding: 12px;
        border-radius: 50%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s, opacity 0.3s;
    }

        #scrollToTopBtn:hover {
            background-color: #0056b3;
        }

</style>

<script>
    // Danh sách tìm kiếm hàng đầu (cứng để minh họa, có thể thay bằng dữ liệu từ server)
    const topSearches = [
        "Ford Everest", "Suzuki XL7", "Toyota", "Honda",
        "Mitsubishi Xpander Cross", "Toyota Fortuner", "Kia Forte"
    ];

    // Hiển thị lịch sử tìm kiếm và tìm kiếm hàng đầu khi focus vào thanh tìm kiếm
    function showSearchHistory() {
        const dropdown = document.getElementById("searchDropdown");
        const historyList = document.getElementById("searchHistory");
        const topSearchesContainer = document.getElementById("topSearches");

        // Hiển thị lịch sử tìm kiếm
        const history = JSON.parse(sessionStorage.getItem("searchHistory")) || [];
        historyList.innerHTML = "";
        if (history.length > 0) {
            history.forEach(search => {
                const li = document.createElement("li");
                li.className = "search-history-item";
                li.textContent = search;
                li.onclick = () => {
                    document.getElementById("searchInput").value = search;
                    filterCars();
                    dropdown.style.display = "none";
                };
                historyList.appendChild(li);
            });
        } else {
            historyList.innerHTML = "<li class='text-muted'>Không có lịch sử tìm kiếm</li>";
        }

        // Hiển thị tìm kiếm hàng đầu
        topSearchesContainer.innerHTML = "";
        topSearches.forEach(search => {
            const span = document.createElement("span");
            span.className = "top-search-item";
            span.textContent = search;
            span.onclick = () => {
                document.getElementById("searchInput").value = search;
                filterCars();
                saveSearchHistory(search);
                dropdown.style.display = "none";
            };
            topSearchesContainer.appendChild(span);
        });

        dropdown.style.display = "block";
    }

    // Ẩn dropdown khi không focus
    function hideSearchHistory(event) {
        setTimeout(() => {
            const dropdown = document.getElementById("searchDropdown");
            const searchInput = document.getElementById("searchInput");

            // Kiểm tra xem phần tử đang focus có phải là dropdown hoặc input không
            if (!dropdown.contains(document.activeElement) && document.activeElement !== searchInput) {
                dropdown.style.display = "none";
            }
        }, 200);
    }


    // Lưu từ khóa tìm kiếm vào sessionStorage
    function saveSearchHistory(searchTerm) {
        if (!searchTerm.trim()) return;
        let history = JSON.parse(sessionStorage.getItem("searchHistory")) || [];
        if (!history.includes(searchTerm)) {
            history.push(searchTerm);
            sessionStorage.setItem("searchHistory", JSON.stringify(history));
        }
    }

    // Xóa lịch sử tìm kiếm
    function clearSearchHistory() {
        sessionStorage.removeItem("searchHistory");
        const historyList = document.getElementById("searchHistory");
        historyList.innerHTML = "<li class='text-muted'>Không có lịch sử tìm kiếm</li>";
    }

    // Lọc xe dựa trên từ khóa tìm kiếm
    function filterCars() {
        let input = document.getElementById("searchInput").value.toLowerCase();
        let cars = document.querySelectorAll(".car-item");

        cars.forEach(car => {
            let carName = car.getAttribute("data-name");
            let brandName = car.getAttribute("data-brand");

            if (carName.includes(input) || (brandName && brandName.includes(input))) {
                car.style.display = "block";
            } else {
                car.style.display = "none";
            }
        });
    }

    // Lưu từ khóa khi nhấn Enter
    document.getElementById("searchInput").addEventListener("keypress", function (e) {
        if (e.key === "Enter") {
            const searchTerm = this.value.trim();
            if (searchTerm) {
                saveSearchHistory(searchTerm);
            }
        }
    });
        // Hiển thị nút khi cuộn xuống 200px
    window.onscroll = function () {
        var btn = document.getElementById("scrollToTopBtn");
        if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
            btn.style.display = "block";
        } else {
            btn.style.display = "none";
        }
    };

    // Hàm cuộn lên đầu trang
    function scrollToTop() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
</script>
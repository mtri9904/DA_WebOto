<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - Web Bán Ô Tô</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" /> @* Gọi CSS riêng *@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="d-flex flex-column min-vh-100">
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <!-- Đổi `container` thành `container-fluid` -->
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">Web Ô Tô</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-0">
@*                         <li class="nav-item">
                            <a asp-area="" class="nav-link" asp-controller="Car" asp-action="Index">Danh sách xe</a>
                        </li>
                        <a asp-area="" asp-controller="Brand" asp-action="Index">
                            <i class="fas fa-car"></i> Hãng xe
                        </a> *@
                        <li class="nav-item">
                            <a asp-area="" class="nav-link" asp-controller="Car" asp-action="CarList">List xe</a>
                        </li>
                    </ul>
                    
                </div>


                <partial name="_LoginPartial" />
            </div>
        </nav>


        <div class="container mt-3 flex-grow-1">
            @RenderBody() @* Nội dung của từng trang *@
        </div>

        <footer class="text-center p-3 mt-4 bg-light">
            <p>&copy; 2025 Web Bán Ô Tô - All rights reserved.</p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)
    <!-- Chatbot Icon and Dialog -->
    <div class="chat-icon" onclick="toggleChat()">
        <i class="fas fa-comments"></i>  <!-- Font Awesome Chat Icon -->
    </div>
    <div class="chat-box" id="chatBox">
        <div class="chat-header">Gemini Chatbot</div>
        <div class="chat-messages" id="chatMessages"></div>
        <div class="chat-input">
            <input type="text" id="chatInput" placeholder="Nhập tin nhắn..." onkeypress="if(event.key === 'Enter') sendMessage();">
            <button onclick="sendMessage()">
                <i class="fas fa-paper-plane"></i>  <!-- Font Awesome Paper Plane Icon -->
            </button>
        </div>
    </div>

    <!-- Add FontAwesome link -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>
        /* Chatbot Icon */
        .chat-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 60px;
            height: 60px;
            background-color: #28a745;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transition: background-color 0.3s;
        }

            .chat-icon:hover {
                background-color: #218838;
            }

        /* Chat Box */
        .chat-box {
            position: fixed;
            bottom: 90px;
            right: 20px;
            width: 360px;
            height: 450px;
            background-color: #fff;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            display: none;
            flex-direction: column;
            z-index: 1000;
        }

        /* Chat Header */
        .chat-header {
            background-color: #28a745;
            color: white;
            padding: 12px;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
        }

        /* Chat Messages */
        .chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            background-color: #f8f9fa;
        }

        .message {
            margin: 8px 0;
            padding: 10px;
            border-radius: 8px;
            max-width: 80%;
            word-wrap: break-word;
        }

        .user-message {
            background-color: #28a745;
            color: white;
            margin-left: auto;
        }

        .bot-message {
            background-color: #e9ecef;
            color: #333;
            margin-right: auto;
        }

        /* Chat Input */
        .chat-input {
            display: flex;
            padding: 10px;
            border-top: 1px solid #ddd;
        }

            .chat-input input {
                flex: 1;
                padding: 8px;
                border: 1px solid #ccc;
                border-radius: 5px;
                outline: none;
                margin-right: 10px;
            }

            .chat-input button {
                padding: 8px 16px;
                background-color: #28a745;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s;
            }

                .chat-input button:hover {
                    background-color: #218838;
                }

                /* Icon Button Inside Chat */
                .chat-input button i {
                    font-size: 18px;
                }
    </style>

    <script>
        function toggleChat() {
            const chatBox = document.getElementById('chatBox');
            chatBox.style.display = chatBox.style.display === 'flex' ? 'none' : 'flex';
        }

        // Lưu tin nhắn vào sessionStorage
        function addMessage(content, isUser) {
            const messages = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message ' + (isUser ? 'user-message' : 'bot-message');
            messageDiv.innerHTML = content;  // Dùng innerHTML để cho phép hiển thị HTML (ảnh, link...)
            messages.appendChild(messageDiv);
            messages.scrollTop = messages.scrollHeight;

            // Lưu lại tin nhắn vào sessionStorage
            saveMessagesToStorage();
        }

        // Lưu toàn bộ tin nhắn vào sessionStorage
        function saveMessagesToStorage() {
            const messages = document.getElementById('chatMessages');
            const allMessages = [];
            for (let i = 0; i < messages.children.length; i++) {
                allMessages.push(messages.children[i].innerHTML); // Lấy nội dung tin nhắn (bao gồm HTML)
            }
            sessionStorage.setItem('chatMessages', JSON.stringify(allMessages));
        }

        // Tải tin nhắn từ sessionStorage khi trang được tải lại
        function loadMessagesFromStorage() {
            const savedMessages = JSON.parse(sessionStorage.getItem('chatMessages') || "[]");
            savedMessages.forEach(message => {
                addMessage(message, false);  // Mặc định là bot-message khi lấy từ sessionStorage
            });
        }

        // Gửi tin nhắn
        async function sendMessage() {
            const input = document.getElementById('chatInput');
            const message = input.value.trim();

            if (!message) {
                addMessage("Vui lòng nhập tin nhắn!", false);
                return;
            }
            addMessage(message, true);
            input.value = '';

            if (message.toLowerCase().includes("tìm xe")) {
                try {
                    const response = await fetch(`/Car/Search?query=${encodeURIComponent(message)}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        }
                    });

                    const data = await response.json();

                    if (data.success && data.cars.length > 0) {
                        let result = "Danh sách xe tìm được:\n";
                        data.cars.forEach(car => {
                            result += `${car.TenXe} - Giá: ${car.GiaTien} VND\n`;
                            result += `<img src="${car.ImageUrl}" alt="${car.TenXe}" width="100" />\n`;
                        });
                        addMessage(result, false);  // Hiển thị kết quả tìm kiếm trong chatbot
                    } else {
                        addMessage("Không tìm thấy xe nào phù hợp với từ khóa của bạn.", false);
                    }
                } catch (error) {
                    addMessage('Lỗi: ' + error.message, false);
                }
            } else {
                // Nếu không phải yêu cầu tìm xe, gọi API chatbot bình thường
                try {
                    const response = await fetch('/Gemini/Chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ message: message })
                    });

                    const data = await response.json();
                    if (data.success) {
                        addMessage(data.response, false);  // Hiển thị câu trả lời từ chatbot
                    } else {
                        addMessage('Lỗi: ' + data.error, false);  // Hiển thị lỗi nếu có
                    }
                } catch (error) {
                    addMessage('Lỗi: ' + error.message, false);  // Hiển thị lỗi nếu không kết nối được với API
                }
            }
        }

        // Khi trang được tải lại, tải tin nhắn từ sessionStorage
        window.onload = function() {
            loadMessagesFromStorage();
        };

        // Khi người dùng đóng trang, sessionStorage sẽ tự động xóa dữ liệu.


    </script>

</body>
</html>
